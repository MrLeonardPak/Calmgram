Server:

Обозначение [(.h) или (.cpp) ... ] означает, что рассматривается файл .h в соответствующей директории (в репозитории для каждой директории по 2 файла созданы : .h и .cpp). 

1. AuthDb -> [(.h) Getters и setters должны быть константными] [(.cpp) лучше использовать size_t вместо int, лучше вместо string использовать string_view, если передаете константные строки]

2. ChatRoom -> [(.h) вот здесь getters and setters константные, название iChatRooms подразумевает, что это интерфейс, хотя iChatRooms - неабстрактный класс] [(.cpp) классно, что вы используете знания из "Чистого кода" и в методах у вас не больше 2-х параметров]

3. Повсюду: рекомендуем везде использовать make_shared вместо обычного создания shared_ptr.

4. Повсюду: в одном методе слишком много функционала, лучше разбить на несколько методов для гибкости

5. Повсюду: лучше прийти к единому формату названий методов и классов

6. Listener-> Нежелательно использовать множественное наследование (чревато зациклиться).

7. Message -> в конструкторах лучше использовать присваивание полей через : name_of_param(name_of_param)

8. Middleware -> это зачем?







